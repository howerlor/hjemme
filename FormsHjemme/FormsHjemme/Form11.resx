<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label8.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /w+71AyVR1QkmQAAAABJRU5ErkJggg==
</value>
  </data>
</root>